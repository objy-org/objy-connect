{"version":3,"file":"index.cjs","sources":["../index.js"],"sourcesContent":["let _fetch = null;\nlet _nodejs = typeof process !== 'undefined' && process.versions && process.versions.node;\nlet mainStorage = null;\nlet sessionStorage = null;\n\nconst init = async () => {\n    if (_nodejs) _fetch = await import('node-fetch');\n    else _fetch = fetch;\n\n    if (typeof localStorage === 'undefined' || localStorage === null) {\n        let { LocalStorage } = await import('node-localstorage');\n        mainStorage = new LocalStorage('./scratch');\n    } else mainStorage = localStorage;\n\n    if (typeof sessionStorage === 'undefined' || sessionStorage === null) {\n        sessionStorage = await import('sessionstorage');\n\n        if (sessionStorage.default) sessionStorage = sessionStorage.default;\n    }\n};\n\ninit();\n\nfunction parseJwt(token) {\n    let base64Url = token.split('.')[1];\n    let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    let jsonPayload = decodeURIComponent(\n        window\n            .atob(base64)\n            .split('')\n            .map(function (c) {\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n            })\n            .join('')\n    );\n\n    return JSON.parse(jsonPayload);\n}\n\nfunction objToQueryString(obj, flags) {\n    const parts = [];\n    let _i;\n\n    obj = JSON.parse(JSON.stringify(Object.assign(obj, flags)));\n    for (const i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (typeof obj[i] == 'object') obj[i] = JSON.stringify(obj[i]);\n            if (i.indexOf('properties') != -1 && i.indexOf('.value') == -1) _i = i + '.value';\n            else _i = i;\n\n            parts.push(encodeURIComponent(_i) + '=' + encodeURIComponent(obj[i]));\n        }\n    }\n    return parts.join('&');\n}\n\nconst ConnectMapper = function (OBJY, options) {\n    return Object.assign(new OBJY.StorageTemplate(OBJY, options), {\n        spoo: null,\n        currentWorkspace: null,\n        currentUrl: null,\n\n        _relogin: function (urlPart, method, body, success, error, app, count) {\n            _fetch(this.currentUrl + '/client/' + this.currentWorkspace + '/token', {\n                method: 'POST',\n                body: JSON.stringify({\n                    refreshToken: mainStorage.getItem('refreshToken'),\n                }),\n                headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\n            })\n                .then((res) => {\n                    if (res.status == 401) {\n                        error({ error: 'refreshing token failed' });\n                    }\n                    return res.json();\n                })\n                .then((json) => {\n                    console.log('json', json);\n                    sessionStorage.setItem('accessToken', json.token.accessToken);\n                    mainStorage.setItem('refreshToken', json.token.refreshToken);\n                    this._genericApiCall(urlPart, method, body, success, error, app, count);\n                })\n                .catch((err) => {});\n        },\n\n        _genericApiCall: function (urlPart, method, body, success, error, app, count) {\n            let url;\n            if (!app) url = this.currentUrl + '/client/' + this.currentWorkspace + '/' + urlPart;\n            else url = this.currentUrl + '/client/' + this.currentWorkspace + '/app/' + app + '/' + urlPart;\n\n            // if(count) url += '/count'\n            let headers = { 'Content-Type': 'application/json', Accept: 'application/json', Authorization: 'Baerer ' + sessionStorage.getItem('accessToken') };\n\n            try {\n                if (body instanceof FormData) headers = { Authorization: 'Baerer ' + sessionStorage.getItem('accessToken') };\n            } catch (e) {}\n\n            _fetch(url, {\n                method: method,\n                body: body,\n                headers: headers,\n            })\n                .then(async (res) => {\n                    //if (res.status == 400) res.errStatus = 400;\n                    if (res.status == 401) {\n                        if (mainStorage.getItem('refreshToken')) this._relogin(urlPart, method, body, success, error, app, count);\n                    } else if (res.status == 400) {\n                        return error();\n                        //throw res.json();\n                    }\n                    return res.json();\n                })\n                .then((json) => {\n                    success(json);\n                })\n                .catch((err) => {\n                    //error(err)\n                });\n        },\n\n        connect: function (credentials, success, error, options) {\n            this.currentWorkspace = credentials.client;\n            this.currentUrl = credentials.url;\n            return this;\n        },\n\n        // SPECIAL OBJY PLATFORM OPERATIONS\n\n        login: function (credentials, success, error) {\n            return new Promise((resolve, reject) => {\n                _fetch(this.currentUrl + '/client/' + this.currentWorkspace + '/auth', {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        permanent: credentials.permanent,\n                        username: credentials.username,\n                        password: credentials.password,\n                        twoFAKey: credentials.twoFAKey,\n                    }),\n                    headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\n                })\n                    .then(async (res) => {\n                        if (res.ok) {\n                            return res.json();\n                        } else {\n                            let errorData = null;\n\n                            try {\n                                errorData = await res.json();\n                            } catch (err) {\n                                throw err;\n                            }\n\n                            throw errorData;\n                        }\n                    })\n                    .then((json) => {\n                        mainStorage.setItem('clientId', this.currentWorkspace);\n                        sessionStorage.setItem('accessToken', json.token.accessToken);\n                        mainStorage.setItem('refreshToken', json.token.refreshToken);\n                        if (success) success(json);\n                        else resolve(json);\n                    })\n                    .catch((err) => {\n                        if (error) error(err);\n                        else reject(err);\n                    });\n            });\n        },\n\n        relogin: function (success, error) {\n            return new Promise((resolve, reject) => {\n                _fetch(this.currentUrl + '/client/' + this.currentWorkspace + '/token', {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        refreshToken: mainStorage.getItem('refreshToken'),\n                    }),\n                    headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\n                })\n                    .then((res) => {\n                        if (res.status == 401) {\n                            throw { error: 'refreshing token failed' };\n                        } else return res.json();\n                    })\n                    .then((json) => {\n                        mainStorage.setItem('clientId', this.currentWorkspace);\n                        sessionStorage.setItem('accessToken', json.token.accessToken);\n                        mainStorage.setItem('refreshToken', json.token.refreshToken);\n                        if (success) success(json);\n                        else resolve(json);\n                    })\n                    .catch((err) => {\n                        if (error) error(err);\n                        else reject(err);\n                    });\n            });\n        },\n\n        authenticated: function (callback) {\n            return new Promise((resolve, reject) => {\n                _fetch(this.currentUrl + '/client/' + this.currentWorkspace + '/authenticated?token=' + sessionStorage.getItem('accessToken'), {\n                    method: 'GET',\n                    headers: { Accept: 'application/json' },\n                })\n                    .then((res) => res.json())\n                    .then((json) => {\n                        if (callback) callback(json.authenticated || json.auth);\n                        else resolve(json.authenticated || json.auth);\n                    })\n                    .catch((err) => {\n                        if (error) error(err);\n                        else reject(err);\n                    });\n            });\n        },\n\n        logout: function (success, error) {\n            return new Promise((resolve, reject) => {\n                _fetch(this.currentUrl + '/client/' + this.currentWorkspace + '/token/reject', {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        accessToken: sessionStorage.getItem('accessToken'),\n                    }),\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Accept: 'application/json',\n                        Authorization: 'Baerer ' + sessionStorage.getItem('accessToken'),\n                    },\n                })\n                    .then((res) => res.json())\n                    .then((json) => {\n                        sessionStorage.removeItem('accessToken');\n                        mainStorage.removeItem('refreshToken');\n                        if (success) success(json);\n                        else resolve(json);\n                    })\n                    .catch((err) => {\n                        if (error) error(err);\n                        else reject(err);\n                    });\n            });\n        },\n\n        path: function (objectFamily, id, app, success, error) {\n            let url;\n            if (!app) url = this.currentUrl + '/client/' + this.currentWorkspace + '/' + objectFamily + '/' + id;\n            else url = this.currentUrl + '/client/' + this.currentWorkspace + '/app/' + app + '/' + objectFamily + '/' + id;\n\n            url += '/stream';\n\n            return new Promise((resolve, reject) => {\n                let token = parseJwt(sessionStorage.getItem('accessToken'));\n                let utcSeconds = token.exp;\n                let d = new Date(0);\n                let now = new Date();\n                d.setUTCSeconds(utcSeconds);\n\n                if (d.getTime() <= now.getTime()) {\n                    // relogin\n                    relogin(\n                        (_success) => {\n                            let _url = url + '?token=' + sessionStorage.getItem('accessToken');\n\n                            if (success) success(_url);\n                            else resolve(_url);\n                        },\n                        (_error) => {\n                            if (error) error(_error);\n                            else reject(_error);\n                        }\n                    );\n                } else {\n                    let _url = url + '?token=' + sessionStorage.getItem('accessToken');\n\n                    if (success) success(_url);\n                    else resolve(_url);\n                }\n            });\n        },\n\n        requestUserKey: function (data, success, error) {\n            return new Promise((resolve, reject) => {\n                _fetch(this.currentUrl + '/client/' + this.currentWorkspace + '/user/requestkey', {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        email: data.email,\n                    }),\n                    headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\n                })\n                    .then((res) => res.json())\n                    .then((json) => {\n                        if (success) success(json);\n                        else resolve(json);\n                    })\n                    .catch((err) => {\n                        if (error) error(err);\n                        else reject(err);\n                    });\n            });\n        },\n\n        requestPasswordReset: function (data, success, error) {\n            return new Promise((resolve, reject) => {\n                _fetch(this.currentUrl + '/client/' + this.currentWorkspace + '/user/requestpasswordreset', {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        email: data.email,\n                        username: data.username,\n                    }),\n                    headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\n                })\n                    .then((res) => res.json())\n                    .then((json) => {\n                        if (success) success(json);\n                        else resolve(json);\n                    })\n                    .catch((err) => {\n                        if (error) error(err);\n                        else reject(err);\n                    });\n            });\n        },\n\n        resetPassword: function (data, success, error) {\n            return new Promise((resolve, reject) => {\n                _fetch(this.currentUrl + '/client/' + this.currentWorkspace + '/user/resetpassword', {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        resetKey: data.resetKey,\n                        password: data.password,\n                        password2: data.password2,\n                    }),\n                    headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\n                })\n                    .then((res) => res.json())\n                    .then((json) => {\n                        if (success) success(json);\n                        else resolve(json);\n                    })\n                    .catch((err) => {\n                        if (error) error(err);\n                        else reject(err);\n                    });\n            });\n        },\n\n        changePassword: function (data, success, error) {\n            return new Promise((resolve, reject) => {\n                if (sessionStorage.getItem('accessToken')) {\n                    _fetch(this.currentUrl + '/client/' + this.currentWorkspace + `/user/${data.userId}/password`, {\n                        method: 'PATCH',\n                        body: JSON.stringify({\n                            old: data.old,\n                            new: data.new,\n                        }),\n                        headers: {\n                            'Content-Type': 'application/json',\n                            Accept: 'application/json',\n                            Authorization: 'Baerer ' + sessionStorage.getItem('accessToken'),\n                        },\n                    })\n                        .then((res) => res.json())\n                        .then((json) => {\n                            if (success) success(json);\n                            else resolve(json);\n                        })\n                        .catch((err) => {\n                            if (error) error(err);\n                            else reject(err);\n                        });\n                } else {\n                    if (error) error('User not authenticated');\n                    else reject('User not authenticated');\n                }\n            });\n        },\n\n        requestClientKey: function (data, success, error) {\n            return new Promise((resolve, reject) => {\n                _fetch(this.currentUrl + '/client/register', {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        email: data.email,\n                    }),\n                    headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\n                })\n                    .then((res) => res.json())\n                    .then((json) => {\n                        if (success) success(json);\n                        else resolve(json);\n                    })\n                    .catch((err) => {\n                        if (error) error(err);\n                        else reject(err);\n                    });\n            });\n        },\n\n        createClient: function (data, success, error) {\n            return new Promise((resolve, reject) => {\n                _fetch(this.currentUrl + '/client', {\n                    method: 'POST',\n                    body: JSON.stringify({\n                        registrationKey: data.registrationKey,\n                        clientname: data.clientname,\n                        username: data.username,\n                        email: data.email,\n                        password: data.password,\n                    }),\n                    headers: { 'Content-Type': 'application/json', Accept: 'application/json' },\n                })\n                    .then(async (res) => {\n                        if (res.status === 400) {\n                            if (error) error(await res.text());\n                            else reject(await res.text());\n                        } else res.json();\n                    })\n                    .then((json) => {\n                        if (success) success(json);\n                        else resolve(json);\n                    })\n                    .catch((err) => {\n                        if (error) error(err);\n                        else reject(err);\n                    });\n            });\n        },\n\n        getById: function (id, success, error, app, client) {\n            this._genericApiCall(this.objectFamily + '/' + id, 'GET', undefined, success, error, app);\n        },\n\n        getByCriteria: function (criteria, success, error, app, client, flags) {\n            this._genericApiCall(this.objectFamily + 's/?' + objToQueryString(criteria, flags), 'GET', undefined, success, error, app);\n        },\n\n        count: function (criteria, success, error, app, client, flags) {\n            this._genericApiCall(this.objectFamily + 's/count?' + objToQueryString(criteria, flags), 'GET', undefined, success, error, app, true);\n        },\n\n        update: function (spooElement, success, error, app, client) {\n            let alterData = [];\n            OBJY.alterSequence.forEach((a) => {\n                if (a[Object.keys(a)[0]].length > 1) a[Object.keys(a)[0]] = Object.values(a[Object.keys(a)[0]]);\n                else a[Object.keys(a)[0]] = Object.values(a[Object.keys(a)[0]])[0];\n                alterData.push(a);\n            });\n            this._genericApiCall(this.objectFamily + '/' + spooElement._id, 'PATCH', JSON.stringify(alterData), success, error, app);\n        },\n\n        add: function (spooElement, success, error, app, client) {\n            if (Array.isArray(spooElement)) {\n                spooElement.forEach((el) => {\n                    el.role = this.objectFamily;\n                });\n            } else spooElement.role = this.objectFamily;\n\n            let data = JSON.stringify(spooElement);\n\n            // Check if object is file (formdata)\n            try {\n                if (spooElement.data) {\n                    if (spooElement.data instanceof FormData) {\n                        data = spooElement.data;\n                    }\n                } else if ((spooElement.properties || {}).data) {\n                    if (spooElement.properties.data instanceof FormData) {\n                        data = spooElement.properties.data;\n                    }\n                }\n            } catch (e) {}\n\n            this._genericApiCall(this.objectFamily, 'POST', data, success, error, app);\n        },\n\n        remove: function (spooElement, success, error, app, client) {\n            this._genericApiCall(this.objectFamily + '/' + spooElement._id, 'DELETE', undefined, success, error, app);\n        },\n\n        turnOnSessionOnly: function () {\n            mainStorage = sessionStorage;\n        },\n    });\n};\n\nif (typeof window !== 'undefined') {\n    window.CONNECT = ConnectMapper;\n}\n\nexport default ConnectMapper;\n"],"names":[],"mappings":"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"}